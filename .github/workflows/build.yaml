name: Build, Lint & Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - website/**
      - coverage/**
  pull_request:
    paths-ignore:
      - frontend/**
      - website/**
      - coverage/**
  workflow_dispatch:
    inputs:
      stable_version:
        description: 'Stable Unleash version to compare against (e.g. 6.9.3)'
        required: false
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest
    name: build
    permissions:
      contents: read
      # Needed for the github-reporter from vitest to make comments on PRs
      pull-requests: write
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_INITDB_ARGS: "--no-sync"
        # Set health checks to wait until postgres has started
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'yarn'
      - name: Enable corepack
        run: corepack enable
      - run: yarn install --immutable
        env:
          YARN_ENABLE_SCRIPTS: false
      - run: yarn lint
      - run: yarn build:backend
      - run: yarn run test
        env:
          CI: true
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

  generate-openapi-current:
    name: Generate OpenAPI (current branch)
    runs-on: ubuntu-latest
    steps:
      - name: Download OpenAPI spec (current branch)
        run: |
          curl -sSL -o openapi-current.json https://us.app.unleash-hosted.com/ushosted/docs/openapi.json
      - name: Upload openapi-current.json
        uses: actions/upload-artifact@v4
        with:
          name: openapi-current
          path: openapi-current.json

  generate-openapi-stable:
    name: Generate OpenAPI (stable)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start Unleash test instance
        run: |
          docker compose -f .github/docker-compose.test.yml up -d --wait -t 90
        env:
          FRONTEND_TEST_LICENSE: ${{ secrets.FRONTEND_TEST_LICENSE }}
          UNLEASH_VERSION: ${{ github.event.inputs.stable_version }}
      - name: Download OpenAPI spec (${{ github.event.inputs.stable_version || 'latest stable' }})
        run: curl -sSL -o openapi-stable.json "localhost:4242/docs/openapi.json"
      - name: Upload openapi-stable.json
        uses: actions/upload-artifact@v4
        with:
          name: openapi-stable
          path: openapi-stable.json

  openapi-diff:
    name: OpenAPI Diff
    runs-on: ubuntu-latest
    needs: [generate-openapi-current, generate-openapi-stable]
    if: github.event_name == 'pull_request'
    steps:
      - name: Download openapi-current.json
        uses: actions/download-artifact@v4
        with:
          name: openapi-current
      - name: Download openapi-stable.json
        uses: actions/download-artifact@v4
        with:
          name: openapi-stable
      - name: Install openapi-changes
        run: |
          curl -sSL https://github.com/pb33f/openapi-changes/releases/latest/download/openapi-changes_Linux_x86_64.tar.gz | tar xz
          sudo mv openapi-changes /usr/local/bin/
      - name: Run OpenAPI diff
        id: diff
        run: |
          openapi-changes diff openapi-stable.json openapi-current.json > openapi-diff.txt || true
      - name: Comment on PR with OpenAPI diff
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const diff = fs.readFileSync('openapi-diff.txt', 'utf8');
            if (diff.length > 60000) {
              core.warning('Diff too long to post as a comment.');
              return;
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### OpenAPI Diff\n\n\`\`\`diff\n${diff}\n\`\`\``
            });
