name: Coverage

on:
  push:
    branches:
      - main
    paths-ignore:
      - website/**
      - frontend/**
      - coverage/**

jobs:
  coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn
      - run: yarn build:frontend
      - run: yarn run test:coverage
        env:
          CI: true
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      #- run: |
      ##    git config --global user.name "${GH_NAME}"
      #    git config --global user.email "${GH_EMAIL}"
      #    GIT_USER="${GH_NAME}"
      #    echo "machine github.com login ${GH_NAME} password ${GITHUB_TOKEN}" > ~/.netrc
      #
      #    git add coverage
      #    git diff-index --quiet HEAD || git commit -m 'chore: update coverage reports'
      #    git push origin main
      #  env:
      #      GH_NAME: 'ivarconr'
      #      GH_EMAIL: 'ivarconr@gmail.com'
      #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
