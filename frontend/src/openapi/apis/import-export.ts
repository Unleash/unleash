/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import useSwr from 'swr';
import type { SWRConfiguration, Key } from 'swr';
import type { StateSchema, _ExportParams } from '../models';
import { fetcher } from '../fetcher';
import type { ErrorType, BodyType } from '../fetcher';

export const _import = (stateSchema: BodyType<StateSchema>) => {
    return fetcher<void>({
        url: `/api/admin/state/import`,
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        data: stateSchema,
    });
};

export const _export = (params?: _ExportParams) => {
    return fetcher<StateSchema>({
        url: `/api/admin/state/export`,
        method: 'get',
        params,
    });
};

export const getExportKey = (params?: _ExportParams) => [
    `/api/admin/state/export`,
    ...(params ? [params] : []),
];

export type _ExportQueryResult = NonNullable<
    Awaited<ReturnType<typeof _export>>
>;
export type _ExportQueryError = ErrorType<unknown>;

export const useExport = <TError = ErrorType<unknown>>(
    params?: _ExportParams,
    options?: {
        swr?: SWRConfiguration<Awaited<ReturnType<typeof _export>>, TError> & {
            swrKey?: Key;
            enabled?: boolean;
        };
    }
) => {
    const { swr: swrOptions } = options ?? {};

    const isEnabled = swrOptions?.enabled !== false;
    const swrKey =
        swrOptions?.swrKey ?? (() => (isEnabled ? getExportKey(params) : null));
    const swrFn = () => _export(params);

    const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
        swrKey,
        swrFn,
        swrOptions
    );

    return {
        swrKey,
        ...query,
    };
};
