/**
 * Generated by orval v6.10.3 🍺
 * Do not edit manually.
 * Unleash API
 * OpenAPI spec version: 4.19.1
 */
import useSwr from 'swr'
import type {
  SWRConfiguration,
  Key
} from 'swr'
import type {
  InstanceAdminStatsSchema
} from '../models'
import { fetcher } from '../fetcher'
import type { ErrorType } from '../fetcher'



  
  /**
 * @deprecated
 */
export const getInstanceAdminStats = (
    
 ) => {
      return fetcher<InstanceAdminStatsSchema>(
      {url: `/api/admin/instance-admin/statistics`, method: 'get'
    },
      );
    }
  

export const getGetInstanceAdminStatsKey = () => [`/api/admin/instance-admin/statistics`];

    
export type GetInstanceAdminStatsQueryResult = NonNullable<Awaited<ReturnType<typeof getInstanceAdminStats>>>
export type GetInstanceAdminStatsQueryError = ErrorType<unknown>

export const useGetInstanceAdminStats = <TError = ErrorType<unknown>>(
  options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof getInstanceAdminStats>>, TError> & { swrKey?: Key, enabled?: boolean },  }

  ) => {

  const {swr: swrOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
    const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getGetInstanceAdminStatsKey() : null);
  const swrFn = () => getInstanceAdminStats();

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}

