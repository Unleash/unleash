/**
 * Generated by orval v6.10.3 üç∫
 * Do not edit manually.
 * Unleash API
 * OpenAPI spec version: 4.20.0-beta.2
 */
import useSwr from 'swr';
import type { SWRConfiguration, Key } from 'swr';
import type { MaintenanceSchema } from '../models';
import { fetcher } from '../fetcher';
import type { ErrorType, BodyType } from '../fetcher';

export const toggleMaintenance = (
    maintenanceSchema: BodyType<MaintenanceSchema>
) => {
    return fetcher<void>({
        url: `/api/admin/maintenance`,
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        data: maintenanceSchema,
    });
};

export const getMaintenance = () => {
    return fetcher<MaintenanceSchema>({
        url: `/api/admin/maintenance`,
        method: 'get',
    });
};

export const getGetMaintenanceKey = () => [`/api/admin/maintenance`];

export type GetMaintenanceQueryResult = NonNullable<
    Awaited<ReturnType<typeof getMaintenance>>
>;
export type GetMaintenanceQueryError = ErrorType<unknown>;

export const useGetMaintenance = <TError = ErrorType<unknown>>(options?: {
    swr?: SWRConfiguration<
        Awaited<ReturnType<typeof getMaintenance>>,
        TError
    > & { swrKey?: Key; enabled?: boolean };
}) => {
    const { swr: swrOptions } = options ?? {};

    const isEnabled = swrOptions?.enabled !== false;
    const swrKey =
        swrOptions?.swrKey ??
        (() => (isEnabled ? getGetMaintenanceKey() : null));
    const swrFn = () => getMaintenance();

    const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
        swrKey,
        swrFn,
        swrOptions
    );

    return {
        swrKey,
        ...query,
    };
};
