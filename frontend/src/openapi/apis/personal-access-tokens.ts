/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import useSwr from 'swr';
import type { SWRConfiguration, Key } from 'swr';
import type { PatsSchema, PatSchema } from '../models';
import { fetcher } from '../fetcher';
import type { ErrorType, BodyType } from '../fetcher';

export const getPats = () => {
    return fetcher<PatsSchema>({
        url: `/api/admin/user/tokens`,
        method: 'get',
    });
};

export const getGetPatsKey = () => [`/api/admin/user/tokens`];

export type GetPatsQueryResult = NonNullable<
    Awaited<ReturnType<typeof getPats>>
>;
export type GetPatsQueryError = ErrorType<unknown>;

export const useGetPats = <TError = ErrorType<unknown>>(options?: {
    swr?: SWRConfiguration<Awaited<ReturnType<typeof getPats>>, TError> & {
        swrKey?: Key;
        enabled?: boolean;
    };
}) => {
    const { swr: swrOptions } = options ?? {};

    const isEnabled = swrOptions?.enabled !== false;
    const swrKey =
        swrOptions?.swrKey ?? (() => (isEnabled ? getGetPatsKey() : null));
    const swrFn = () => getPats();

    const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
        swrKey,
        swrFn,
        swrOptions
    );

    return {
        swrKey,
        ...query,
    };
};

export const createPat = (patSchema: BodyType<PatSchema>) => {
    return fetcher<PatSchema>({
        url: `/api/admin/user/tokens`,
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        data: patSchema,
    });
};

export const deletePat = (id: string) => {
    return fetcher<void>({
        url: `/api/admin/user/tokens/${id}`,
        method: 'delete',
    });
};
