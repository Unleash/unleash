/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import useSwr from 'swr';
import type { SWRConfiguration, Key } from 'swr';
import type {
    PatsSchema,
    GetPats401,
    GetPats403,
    GetPats404,
    PatSchema,
} from '../models';
import { fetcher } from '../fetcher';
import type { ErrorType, BodyType } from '../fetcher';

/**
 * Returns all of the [Personal Access Tokens](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens) belonging to the current user.
 * @summary Get all Personal Access Tokens for the current user.
 */
export const getPats = () => {
    return fetcher<PatsSchema>({
        url: `/api/admin/user/tokens`,
        method: 'get',
    });
};

export const getGetPatsKey = () => [`/api/admin/user/tokens`] as const;

export type GetPatsQueryResult = NonNullable<
    Awaited<ReturnType<typeof getPats>>
>;
export type GetPatsQueryError = ErrorType<GetPats401 | GetPats403 | GetPats404>;

/**
 * @summary Get all Personal Access Tokens for the current user.
 */
export const useGetPats = <
    TError = ErrorType<GetPats401 | GetPats403 | GetPats404>
>(options?: {
    swr?: SWRConfiguration<Awaited<ReturnType<typeof getPats>>, TError> & {
        swrKey?: Key;
        enabled?: boolean;
    };
}) => {
    const { swr: swrOptions } = options ?? {};

    const isEnabled = swrOptions?.enabled !== false;
    const swrKey =
        swrOptions?.swrKey ?? (() => (isEnabled ? getGetPatsKey() : null));
    const swrFn = () => getPats();

    const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
        swrKey,
        swrFn,
        swrOptions
    );

    return {
        swrKey,
        ...query,
    };
};

/**
 * Creates a new [Personal Access Token](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens) for the current user.
 * @summary Create a new Personal Access Token.
 */
export const createPat = (patSchema: BodyType<PatSchema>) => {
    return fetcher<PatSchema>({
        url: `/api/admin/user/tokens`,
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        data: patSchema,
    });
};

/**
 * This endpoint allows for deleting a [Personal Access Token](https://docs.getunleash.io/how-to/how-to-create-personal-access-tokens) belonging to the current user.
 * @summary Delete a Personal Access Token.
 */
export const deletePat = (id: string) => {
    return fetcher<void>({
        url: `/api/admin/user/tokens/${id}`,
        method: 'delete',
    });
};
