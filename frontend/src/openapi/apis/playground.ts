/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import type {
    PlaygroundResponseSchema,
    PlaygroundRequestSchema,
    AdvancedPlaygroundResponseSchema,
    AdvancedPlaygroundRequestSchema,
} from '../models';
import { fetcher } from '../fetcher';
import type { BodyType } from '../fetcher';

/**
 * Deprecated. Will be removed in the next Unleash major update. Use the provided `context`, `environment`, and `projects` to evaluate toggles on this Unleash instance. Returns a list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.
 * @summary Evaluate an Unleash context against a set of environments and projects.
 */
export const getPlayground = (
    playgroundRequestSchema: BodyType<PlaygroundRequestSchema>
) => {
    return fetcher<PlaygroundResponseSchema>({
        url: `/api/admin/playground`,
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        data: playgroundRequestSchema,
    });
};

/**
 * Use the provided `context`, `environments`, and `projects` to evaluate toggles on this Unleash instance. You can use comma-separated values to provide multiple values to each context field. Returns a combinatorial list of all toggles that match the parameters and what they evaluate to. The response also contains the input parameters that were provided.
 * @summary Batch evaluate an Unleash context against a set of environments and projects.
 */
export const getAdvancedPlayground = (
    advancedPlaygroundRequestSchema: BodyType<AdvancedPlaygroundRequestSchema>
) => {
    return fetcher<AdvancedPlaygroundResponseSchema>({
        url: `/api/admin/playground/advanced`,
        method: 'post',
        headers: { 'Content-Type': 'application/json' },
        data: advancedPlaygroundRequestSchema,
    });
};
