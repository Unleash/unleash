/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import useSwr from 'swr';
import type { SWRConfiguration, Key } from 'swr';
import type { TelemetrySettingsSchema } from '../models';
import { fetcher } from '../fetcher';
import type { ErrorType } from '../fetcher';

/**
 * Provides the configured settings for [telemetry information collection](https://docs.getunleash.io/topics/data-collection)
 * @summary Get telemetry settings
 */
export const getTelemetrySettings = () => {
    return fetcher<TelemetrySettingsSchema>({
        url: `/api/admin/telemetry/settings`,
        method: 'get',
    });
};

export const getGetTelemetrySettingsKey = () =>
    [`/api/admin/telemetry/settings`] as const;

export type GetTelemetrySettingsQueryResult = NonNullable<
    Awaited<ReturnType<typeof getTelemetrySettings>>
>;
export type GetTelemetrySettingsQueryError = ErrorType<unknown>;

/**
 * @summary Get telemetry settings
 */
export const useGetTelemetrySettings = <TError = ErrorType<unknown>>(options?: {
    swr?: SWRConfiguration<
        Awaited<ReturnType<typeof getTelemetrySettings>>,
        TError
    > & { swrKey?: Key; enabled?: boolean };
}) => {
    const { swr: swrOptions } = options ?? {};

    const isEnabled = swrOptions?.enabled !== false;
    const swrKey =
        swrOptions?.swrKey ??
        (() => (isEnabled ? getGetTelemetrySettingsKey() : null));
    const swrFn = () => getTelemetrySettings();

    const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
        swrKey,
        swrFn,
        swrOptions
    );

    return {
        swrKey,
        ...query,
    };
};
