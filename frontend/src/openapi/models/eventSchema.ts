/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import type { EventSchemaType } from './eventSchemaType.js';
import type { EventSchemaData } from './eventSchemaData.js';
import type { EventSchemaPreData } from './eventSchemaPreData.js';
import type { TagSchema } from './tagSchema.js';

/**
 * An event describing something happening in the system
 */
export interface EventSchema {
    /**
     * The ID of the event. An increasing natural number.
     * @minimum 1
     */
    id: number;
    /** The time the event happened as a RFC 3339-conformant timestamp. */
    createdAt: string;
    /** What [type](https://docs.getunleash.io/reference/api/legacy/unleash/admin/events#event-type-description) of event this is */
    type: EventSchemaType;
    /** Which user created this event */
    createdBy: string;
    /**
     * The is of the user that created this event
     * @nullable
     */
    createdByUserId?: number | null;
    /**
     * The feature flag environment the event relates to, if applicable.
     * @nullable
     */
    environment?: string | null;
    /**
     * The project the event relates to, if applicable.
     * @nullable
     */
    project?: string | null;
    /**
     * The name of the feature flag the event relates to, if applicable.
     * @nullable
     */
    featureName?: string | null;
    /**
     * Extra associated data related to the event, such as feature flag state, segment configuration, etc., if applicable.
     * @nullable
     */
    data?: EventSchemaData;
    /**
     * Data relating to the previous state of the event's subject.
     * @nullable
     */
    preData?: EventSchemaPreData;
    /**
     * Any tags related to the event, if applicable.
     * @nullable
     */
    tags?: TagSchema[] | null;
    /**
     * The concise, human-readable name of the event.
     * @nullable
     */
    label?: string | null;
    /**
     * A markdown-formatted summary of the event.
     * @nullable
     */
    summary?: string | null;
    /**
     * The IP address of the user that created the event. Only available in Enterprise.
     * @nullable
     */
    ip?: string | null;
}
