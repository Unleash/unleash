/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import type { IncomingWebhookEventSchemaPayload } from './incomingWebhookEventSchemaPayload';
import type { IncomingWebhookEventSchemaSource } from './incomingWebhookEventSchemaSource';

/**
 * An object describing an incoming webhook event.
 */
export interface IncomingWebhookEventSchema {
    /** The date and time of when the observable event was created. */
    createdAt: string;
    /** The observable event's ID. Observable event IDs are incrementing integers. In other words, a more recently created observable event will always have a higher ID than an older one. */
    id?: number;
    /** The payload of the observable event. */
    payload?: IncomingWebhookEventSchemaPayload;
    /** The observable event source type. Should be used along with `sourceId` to uniquely identify the resource that created this observable event. */
    source: IncomingWebhookEventSchemaSource;
    /** The ID of the source that created this observable event. Should be used along with `source` to uniquely identify the resource that created this observable event. */
    sourceId: number;
    /** The name of the token used to register this incoming webhook event. */
    tokenName?: string | null;
}
