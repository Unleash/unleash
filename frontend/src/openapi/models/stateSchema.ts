/**
 * Generated by Orval
 * Do not edit manually.
 * See `gen:api` script in package.json
 */
import type { FeatureSchema } from './featureSchema';
import type { StrategySchema } from './strategySchema';
import type { TagSchema } from './tagSchema';
import type { TagTypeSchema } from './tagTypeSchema';
import type { FeatureTagSchema } from './featureTagSchema';
import type { ProjectSchema } from './projectSchema';
import type { FeatureStrategySchema } from './featureStrategySchema';
import type { FeatureEnvironmentSchema } from './featureEnvironmentSchema';
import type { EnvironmentSchema } from './environmentSchema';
import type { SegmentSchema } from './segmentSchema';
import type { FeatureStrategySegmentSchema } from './featureStrategySegmentSchema';

/**
 * The application state as used by the deprecated export/import APIs.
 * @deprecated
 */
export interface StateSchema {
    /** The version of the schema used to describe the state */
    version: number;
    /** A list of features */
    features?: FeatureSchema[];
    /** A list of strategies */
    strategies?: StrategySchema[];
    /** A list of tags */
    tags?: TagSchema[];
    /** A list of tag types */
    tagTypes?: TagTypeSchema[];
    /** A list of tags applied to features */
    featureTags?: FeatureTagSchema[];
    /** A list of projects */
    projects?: ProjectSchema[];
    /** A list of feature strategies as applied to features */
    featureStrategies?: FeatureStrategySchema[];
    /** A list of feature environment configurations */
    featureEnvironments?: FeatureEnvironmentSchema[];
    /** A list of environments */
    environments?: EnvironmentSchema[];
    /** A list of segments */
    segments?: SegmentSchema[];
    /** A list of segment/strategy pairings */
    featureStrategySegments?: FeatureStrategySegmentSchema[];
}
