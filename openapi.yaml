openapi: 3.0.0
servers:
  - description: Local host.
    url: 'http://localhost:4242/api'
tags:
  - name: Admin - feature toggles
    description: Accessing feature toggles
  - name: Admin - archive
    description: Handling Feature Toggle archiving and un-archiving
  - name: Admin - strategies
    description: Accessing and updating strategies
  - name: Admin - metrics
    description: Determining usage of feature toggles and applications
info:
  title: Unleash API
  description: Unleash is a open source feature flag and toggle system for all your applications and services.
  version: 3.5.6
  contact:
    name: The Unleash team
    url: 'https://unleash.github.io/'
    email: some_email@gmail.com
externalDocs:
  description: Unleash documentation
  url: 'https://unleash.github.io/docs/getting_started'
paths:
  /admin/features:
    get:
      summary: Fetches all feature toggles from the Unleash server.
      description: |
        The response returns all active feature toggles and their current strategy configuration:
        - A feature toggle will have *at least* one configured strategy.
        - A strategy will have a `name` and `parameters` map.

        **Note:** To only return one Feature Toggle, add the Feature Toggle name as a suffix to the request. For example: `GET [Your host]/api/admin/features/featureX`. It is not possible to add this parameter as a *Try it out* option due to restrictions in the [Open API Sepcification](https://swagger.io/docs/specification/describing-parameters/), (that is, *optional* path variables cannot be created).
      externalDocs:
        description: Activation strategies
        url: 'https://unleash.github.io/docs/activation_strategy'
      operationId: getFeatures
      tags:
        - Admin - feature toggles
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
        '401':
          description: Not authorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      description: Create a new Feature Toggle
      tags:
        - Admin - feature toggles
      operationId: createFeatureToggle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newFeatureToggle'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
        '409':
          description: Feature Toggle name is not unique
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
      summary: Create a Feature Toggle
  '/admin/features/{featureName}':
    put:
      summary: Update a Feature Toggle
      description: Update a Feature Toggle.
      operationId: featureName
      tags:
        - Admin - feature toggles
      parameters:
        - $ref: '#/components/parameters/featureNamePath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateFeatureToggle'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
    delete:
      summary: Archive a Feature Toggle.
      description: |
        Feature toggles can only be archived - they cannot be deleted.

        If an old Feature Toggle *re-appears*, this is because someone else has created a new one with the same name.
      operationId: archiveFeatureToggle
      tags:
        - Admin - feature toggles
      parameters:
        - $ref: '#/components/parameters/featureNamePath'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
  '/admin/features/{featureName}/toggle/on':
    post:
      summary: Enable a Feature Toggle.
      description: '*featureName* must match an existing Feature Toggle.'
      operationId: enableFeatureToggle
      tags:
        - Admin - feature toggles
      parameters:
        - $ref: '#/components/parameters/featureNamePath'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
  '/admin/features/{featureName}/toggle/off':
    post:
      summary: Disable a Feature Toggle.
      description: '*featureName* must match an existing Feature Toggle.'
      operationId: disableFeatureToggle
      tags:
        - Admin - feature toggles
      parameters:
        - $ref: '#/components/parameters/featureNamePath'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
  '/admin/features/{featureName}/stale/on':
    post:
      summary: Mark a Feature Toggle as 'stale' (deprecated).
      description: '*featureName* must match an existing Feature Toggle.'
      externalDocs:
        description: Feature Toggle types
        url: 'https://unleash.github.io/docs/feature_toggle_types'
      operationId: markFeatureToggleStale
      tags:
        - Admin - feature toggles
      parameters:
        - $ref: '#/components/parameters/featureNamePath'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
  '/admin/features/{featureName}/stale/off':
    post:
      summary: Mark a Feature Toggle as active.
      description: '*featureName* must match an existing Feature Toggle.'
      externalDocs:
        description: Feature Toggle types
        url: 'https://unleash.github.io/docs/feature_toggle_types'
      operationId: markFeatureToggleActive
      tags:
        - Admin - feature toggles
      parameters:
        - $ref: '#/components/parameters/featureNamePath'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
        '409':
          description: Feature Toggle name is not unique.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
  /admin/archive/features:
    get:
      summary: List all the archived feature toggles on the Unleash server
      description: Archived feature toggles are those that have been previously deleted
      operationId: fetchArchivedToggles
      tags:
        - Admin - archive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
  '/admin/archive/revive/{featureName}':
    post:
      summary: Un-archive a Feature Toggle
      description: The Feature Toggle had been previously deleted
      operationId: reviveFeatureToggle
      tags:
        - Admin - archive
      parameters:
        - $ref: '#/components/parameters/featureNamePath'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
  /admin/strategies:
    get:
      summary: Fetch all strategies and their parameters.
      description: Fetch all strategies and their parameters.
      operationId: getStrategies
      tags:
        - Admin - strategies
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200strategy'
    post:
      summary: Create Strategy
      description: Create Strategy
      operationId: createStrategy
      tags:
        - Admin - strategies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createStrategy'
      responses:
        '201':
          description: Strategy successfully added
  '/admin/strategies/{strategyName}':
    put:
      summary: Update Strategy
      description: |
        Use to update a Strategy definition.

        *name* and *strategyName* must match and must also match an existing Strategy name.

        **Caution:** It can be dangerous to change a Strategy (as the implementation also might need to be changed).
      operationId: updateStrategy
      tags:
        - Admin - strategies
      parameters:
        - $ref: '#/components/parameters/strategyNamePath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createStrategy'
      responses:
        '200':
          description: Strategy successfully updated.
  /admin/metrics/seen-toggles:
    get:
      summary: Returns a list of applications and the feature toggles that unleash has 'seen' for each application.
      description: 'It is only guaranteed that feature toggles reported by client applications within the last hour will be returned. However, in most cases, earlier reported feature toggles will also be returned.'
      operationId: seenToggles
      tags:
        - Admin - metrics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200seen'
  /admin/metrics/feature-toggles:
    get:
      summary: Gives *last minute* and *last hour* metrics for all active toggles (based on what was reported by the client applications).
      description: |
        - **Yes** is the number of times a given feature toggle was enabled in a client applcation
        - **No** is the number of times it was disabled.
      operationId: featureToggles
      tags:
        - Admin - metrics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200feature'
  /admin/metrics/applications:
    get:
      summary: A list of known applications ('seen' by unleash in the last two days) and a link for more details.
      operationId: getApplications
      tags:
        - Admin - metrics
      parameters:
        - $ref: '#/components/parameters/strategyQuery'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200application'
  '/admin/metrics/applications/{appName}':
    get:
      summary: 'Details about a client application, such as instances, strategies implemented and seen feature toggles.'
      operationId: getApplicationDetails
      tags:
        - Admin - metrics
      parameters:
        - $ref: '#/components/parameters/appNamePath'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200appdetails'
components:
  parameters:
    strategyQuery:
      name: strategyName
      in: query
      description: Return all applications implementing the specified Strategy. Must match an existing Strategy name.
      schema:
        type: string
    featureNamePath:
      name: featureName
      required: true
      in: path
      description: Must match an existing Feature Toggle.
      schema:
        type: string
    strategyNamePath:
      name: strategyName
      required: true
      in: path
      description: Must match an existing Strategy name.
      schema:
        type: string
    appNamePath:
      name: appName
      required: true
      in: path
      description: Must match an existing application name.
      schema:
        type: string
  schemas:
    '200':
      title: Successful response
      type: object
      properties:
        version:
          type: number
        features:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            properties:
              name:
                type: string
                minLength: 1
              description:
                type: string
                minLength: 1
              type:
                type: string
                minLength: 1
              enabled:
                type: boolean
              stale:
                type: boolean
              strategies:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      minLength: 1
                    parameters:
                      type: object
                      properties: {}
              variants:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  required:
                    - name
                    - weight
                  properties:
                    name:
                      type: string
                      minLength: 1
                    weight:
                      type: number
    '401':
      description: Not authorised
      type: object
      properties:
        type:
          type: string
          minLength: 1
        path:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
      required:
        - type
        - path
        - message
    '409':
      type: object
      properties:
        isJoi:
          type: boolean
        name:
          type: string
          minLength: 1
        details:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - message
            properties:
              message:
                type: string
                minLength: 1
      required:
        - isJoi
        - name
        - details
    200strategy:
      description: Successful.
      type: object
      properties:
        version:
          type: number
          example: 1
        strategies:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - name
              - editable
              - description
            properties:
              name:
                type: string
                minLength: 1
              editable:
                type: boolean
              description:
                type: string
                minLength: 1
              parameters:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  required:
                    - name
                    - type
                    - description
                    - required
                  properties:
                    name:
                      type: string
                      minLength: 1
                    type:
                      type: string
                      minLength: 1
                    description:
                      type: string
                      minLength: 1
                    required:
                      type: boolean
      required:
        - version
        - strategies
    newFeatureToggle:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Feature Toggle name must be unique.
          example: FeatureA
        description:
          type: string
          minLength: 1
          example: Toggles FeatureA on and off
        type:
          type: string
          enum:
            - release
            - experiment
            - ops
            - killswitch
            - permission
          minLength: 1
          description: '*type* is optional. If not defined, it defaults to `release`'
          externalDocs:
            description: Feature Toggle types
            url: 'https://unleash.github.io/docs/feature_toggle_types'
          example: release
        enabled:
          type: boolean
          example: false
        stale:
          type: boolean
          example: false
        strategies:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - name
            properties:
              name:
                type: string
                minLength: 1
                example: default
              parameters:
                type: object
                properties: {}
      required:
        - name
        - description
        - enabled
        - stale
        - strategies
    updateFeatureToggle:
      type: object
      properties:
        description:
          type: string
          minLength: 1
          example: Toggles FeatureB on and off
        type:
          type: string
          minLength: 1
          description: '*type* is optional. If not defined, it defaults to `release`'
          example: release
        enabled:
          type: boolean
          example: false
        stale:
          type: boolean
          example: false
        strategies:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - name
            properties:
              name:
                type: string
                minLength: 1
                example: default
              parameters:
                type: object
                properties:
                  rollout:
                    type: number
                  stickiness:
                    type: string
                    minLength: 1
                  groupId:
                    type: string
                    minLength: 1
                required:
                  - rollout
                  - stickiness
                  - groupId
        variants: {}
        createdAt:
          type: string
          minLength: 1
      required:
        - name
        - description
        - enabled
        - stale
        - strategies
        - variants
    createStrategy:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: gradualRollout
        description:
          type: string
          minLength: 1
          example: Gradual rollout to logged in users
        parameters:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - name
              - type
              - description
              - required
            properties:
              name:
                type: string
                minLength: 1
                example: percentage
              type:
                type: string
                minLength: 1
                example: percentage
              description:
                type: string
                minLength: 1
                example: How many percent of users should the new Feature Toggle be active for.
              required:
                type: boolean
      required:
        - name
        - description
        - parameters
    200seen:
      type: array
      description: ''
      minItems: 1
      uniqueItems: true
      items:
        type: object
        required:
          - appName
          - seenToggles
          - metricsCount
        properties:
          appName:
            type: string
            minLength: 1
          seenToggles:
            type: array
            items:
              required: []
              properties: {}
          metricsCount:
            type: number
    200feature:
      description: |
        - **lastHour** - 'hour projection collected' metrics for all feature toggles.
        - **lastMinute** - 'minute projection collected' metrics for all feature toggles.
      type: object
      properties:
        lastHour:
          type: object
          properties:
            add-feature-2:
              type: object
              properties:
                'yes':
                  type: number
                'no':
                  type: number
              required:
                - 'yes'
                - 'no'
            toggle-2:
              type: object
              properties:
                'yes':
                  type: number
                'no':
                  type: number
              required:
                - 'yes'
                - 'no'
            toggle-3:
              type: object
              properties:
                'yes':
                  type: number
                'no':
                  type: number
              required:
                - 'yes'
                - 'no'
          required:
            - add-feature-2
            - toggle-2
            - toggle-3
        lastMinute:
          type: object
          properties:
            add-feature-2:
              type: object
              properties:
                'yes':
                  type: number
                'no':
                  type: number
              required:
                - 'yes'
                - 'no'
            toggle-2:
              type: object
              properties:
                'yes':
                  type: number
                'no':
                  type: number
              required:
                - 'yes'
                - 'no'
            toggle-3:
              type: object
              properties:
                'yes':
                  type: number
                'no':
                  type: number
              required:
                - 'yes'
                - 'no'
          required:
            - add-feature-2
            - toggle-2
            - toggle-3
      required:
        - lastHour
        - lastMinute
    200application:
      description: ''
      type: object
      properties:
        applications:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - appName
              - createdAt
            properties:
              appName:
                type: string
                minLength: 1
              strategies:
                type: array
                items:
                  required: []
                  properties: {}
              createdAt:
                type: string
                minLength: 1
              links:
                type: object
                properties:
                  appDetails:
                    type: string
                    minLength: 1
                required:
                  - appDetails
      required:
        - applications
    200appdetails:
      description: ''
      type: object
      properties:
        appName:
          type: string
          minLength: 1
        instances:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - instanceId
              - clientIp
              - lastSeen
              - createdAt
            properties:
              instanceId:
                type: string
                minLength: 1
              clientIp:
                type: string
                minLength: 1
              lastSeen:
                type: string
                minLength: 1
              createdAt:
                type: string
                minLength: 1
        strategies:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            required:
              - appName
            properties:
              appName:
                type: string
                minLength: 1
              strategies:
                type: array
                items:
                  required: []
                  properties: {}
        seenToggles:
          type: array
          items:
            required: []
            properties: {}
      required:
        - appName
        - instances
        - strategies
        - seenToggles
