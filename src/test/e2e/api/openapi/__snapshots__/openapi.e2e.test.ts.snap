// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should serve the OpenAPI UI 1`] = `
"<!DOCTYPE html>
<html>
  <head>
    <title>Swagger UI</title>
    <meta charset=\\"utf-8\\"/>
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\">
    <style>
      html {
          box-sizing: border-box;
          overflow: -moz-scrollbars-vertical;
          overflow-y: scroll;
      }
      *,
      *:before,
      *:after {
          box-sizing: inherit;
      }
      body {
        margin: 0;
        padding: 0;
        background: #fafafa;
      }
    </style>
    
      <link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"./swagger-ui.css\\" >
    
  </head>
  <body>
    
      <div id=\\"swagger-ui\\"></div>
      <script src=\\"./swagger-ui-bundle.js\\"></script>
      <script src=\\"./swagger-ui-standalone-preset.js\\"></script>
      <script>
        window.onload = function () {
          window.ui = SwaggerUIBundle({
            url: \\"/docs/openapi.json\\",
            dom_id: '#swagger-ui'
          })
        }
      </script>
    
  </body>
</html>
  "
`;

exports[`should serve the OpenAPI spec 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "addonParameterSchema": Object {
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "displayName": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "placeholder": Object {
            "type": "string",
          },
          "required": Object {
            "type": "boolean",
          },
          "sensitive": Object {
            "type": "boolean",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "displayName",
          "type",
          "required",
          "sensitive",
        ],
        "type": "object",
      },
      "addonSchema": Object {
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "enabled": Object {
            "type": "boolean",
          },
          "events": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "id": Object {
            "type": "number",
          },
          "parameters": Object {
            "additionalProperties": true,
            "type": "object",
          },
          "provider": Object {
            "type": "string",
          },
        },
        "required": Array [
          "provider",
          "enabled",
          "parameters",
          "events",
        ],
        "type": "object",
      },
      "addonTypeSchema": Object {
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "displayName": Object {
            "type": "string",
          },
          "documentationUrl": Object {
            "type": "string",
          },
          "events": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "items": Object {
              "$ref": "#/components/schemas/addonParameterSchema",
            },
            "type": "array",
          },
          "tagTypes": Object {
            "items": Object {
              "$ref": "#/components/schemas/tagTypeSchema",
            },
            "type": "array",
          },
        },
        "required": Array [
          "name",
          "displayName",
          "documentationUrl",
          "description",
        ],
        "type": "object",
      },
      "addonsSchema": Object {
        "properties": Object {
          "addons": Object {
            "items": Object {
              "$ref": "#/components/schemas/addonSchema",
            },
            "type": "array",
          },
          "providers": Object {
            "items": Object {
              "$ref": "#/components/schemas/addonTypeSchema",
            },
            "type": "array",
          },
        },
        "required": Array [
          "addons",
          "providers",
        ],
        "type": "object",
      },
      "apiTokenSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "environment": Object {
            "type": "string",
          },
          "expiresAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "project": Object {
            "type": "string",
          },
          "projects": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "secret": Object {
            "type": "string",
          },
          "seenAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "type": Object {
            "description": "client, admin.",
            "type": "string",
          },
          "username": Object {
            "type": "string",
          },
        },
        "required": Array [
          "username",
          "type",
        ],
        "type": "object",
      },
      "apiTokensSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "tokens": Object {
            "items": Object {
              "$ref": "#/components/schemas/apiTokenSchema",
            },
            "type": "array",
          },
        },
        "required": Array [
          "tokens",
        ],
        "type": "object",
      },
      "applicationSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "announced": Object {
            "type": "boolean",
          },
          "appName": Object {
            "type": "string",
          },
          "color": Object {
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "icon": Object {
            "type": "string",
          },
          "sdkVersion": Object {
            "type": "string",
          },
          "strategies": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "url": Object {
            "type": "string",
          },
        },
        "required": Array [
          "appName",
        ],
        "type": "object",
      },
      "applicationsSchema": Object {
        "properties": Object {
          "applications": Object {
            "items": Object {
              "$ref": "#/components/schemas/applicationSchema",
            },
            "type": "array",
          },
        },
        "type": "object",
      },
      "changePasswordSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "password": Object {
            "type": "string",
          },
          "token": Object {
            "type": "string",
          },
        },
        "required": Array [
          "token",
          "password",
        ],
        "type": "object",
      },
      "clientApplicationSchema": Object {
        "properties": Object {
          "appName": Object {
            "type": "string",
          },
          "environment": Object {
            "type": "string",
          },
          "instanceId": Object {
            "type": "string",
          },
          "interval": Object {
            "type": "number",
          },
          "sdkVersion": Object {
            "type": "string",
          },
          "started": Object {
            "oneOf": Array [
              Object {
                "format": "date-time",
                "type": "string",
              },
              Object {
                "type": "number",
              },
            ],
          },
          "strategies": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": Array [
          "appName",
          "interval",
          "started",
          "strategies",
        ],
        "type": "object",
      },
      "clientFeatureSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "description": Object {
            "nullable": true,
            "type": "string",
          },
          "enabled": Object {
            "type": "boolean",
          },
          "impressionData": Object {
            "nullable": true,
            "type": "boolean",
          },
          "lastSeenAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "project": Object {
            "type": "string",
          },
          "stale": Object {
            "type": "boolean",
          },
          "strategies": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureStrategySchema",
            },
            "type": "array",
          },
          "type": Object {
            "type": "string",
          },
          "variants": Object {
            "items": Object {
              "$ref": "#/components/schemas/clientVariantSchema",
            },
            "nullable": true,
            "type": "array",
          },
        },
        "required": Array [
          "name",
          "enabled",
        ],
        "type": "object",
      },
      "clientFeaturesQuerySchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "environment": Object {
            "type": "string",
          },
          "inlineSegmentConstraints": Object {
            "type": "boolean",
          },
          "namePrefix": Object {
            "type": "string",
          },
          "project": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "tag": Object {
            "items": Object {
              "items": Object {
                "type": "string",
              },
              "type": "array",
            },
            "type": "array",
          },
        },
        "required": Array [],
        "type": "object",
      },
      "clientFeaturesSchema": Object {
        "properties": Object {
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/clientFeatureSchema",
            },
            "type": "array",
          },
          "query": Object {
            "$ref": "#/components/schemas/clientFeaturesQuerySchema",
          },
          "segments": Object {
            "items": Object {
              "$ref": "#/components/schemas/segmentSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "version",
          "features",
        ],
        "type": "object",
      },
      "clientMetricsSchema": Object {
        "properties": Object {
          "appName": Object {
            "type": "string",
          },
          "bucket": Object {
            "properties": Object {
              "start": Object {
                "$ref": "#/components/schemas/dateSchema",
              },
              "stop": Object {
                "$ref": "#/components/schemas/dateSchema",
              },
              "toggles": Object {
                "additionalProperties": Object {
                  "properties": Object {
                    "no": Object {
                      "minimum": 0,
                      "type": "integer",
                    },
                    "variants": Object {
                      "additionalProperties": Object {
                        "minimum": 0,
                        "type": "integer",
                      },
                      "type": "object",
                    },
                    "yes": Object {
                      "minimum": 0,
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
                "type": "object",
              },
            },
            "required": Array [
              "start",
              "stop",
              "toggles",
            ],
            "type": "object",
          },
          "environment": Object {
            "type": "string",
          },
          "instanceId": Object {
            "type": "string",
          },
        },
        "required": Array [
          "appName",
          "bucket",
        ],
        "type": "object",
      },
      "clientVariantSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "name": Object {
            "type": "string",
          },
          "payload": Object {
            "properties": Object {
              "type": Object {
                "type": "string",
              },
              "value": Object {
                "type": "string",
              },
            },
            "required": Array [
              "type",
              "value",
            ],
            "type": "object",
          },
          "weight": Object {
            "type": "number",
          },
        },
        "required": Array [
          "name",
          "weight",
        ],
        "type": "object",
      },
      "cloneFeatureSchema": Object {
        "properties": Object {
          "name": Object {
            "type": "string",
          },
          "replaceGroupId": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "constraintSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "caseInsensitive": Object {
            "type": "boolean",
          },
          "contextName": Object {
            "type": "string",
          },
          "inverted": Object {
            "type": "boolean",
          },
          "operator": Object {
            "enum": Array [
              "NOT_IN",
              "IN",
              "STR_ENDS_WITH",
              "STR_STARTS_WITH",
              "STR_CONTAINS",
              "NUM_EQ",
              "NUM_GT",
              "NUM_GTE",
              "NUM_LT",
              "NUM_LTE",
              "DATE_AFTER",
              "DATE_BEFORE",
              "SEMVER_EQ",
              "SEMVER_GT",
              "SEMVER_LT",
            ],
            "type": "string",
          },
          "value": Object {
            "type": "string",
          },
          "values": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": Array [
          "contextName",
          "operator",
        ],
        "type": "object",
      },
      "contextFieldSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "legalValues": Object {
            "items": Object {
              "$ref": "#/components/schemas/legalValueSchema",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "sortOrder": Object {
            "type": "number",
          },
          "stickiness": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "contextFieldsSchema": Object {
        "items": Object {
          "$ref": "#/components/schemas/contextFieldSchema",
        },
        "type": "array",
      },
      "createApiTokenSchema": Object {
        "properties": Object {
          "environment": Object {
            "type": "string",
          },
          "expiresAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "project": Object {
            "type": "string",
          },
          "projects": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "secret": Object {
            "type": "string",
          },
          "type": Object {
            "description": "client, admin.",
            "type": "string",
          },
          "username": Object {
            "type": "string",
          },
        },
        "required": Array [
          "username",
          "type",
        ],
        "type": "object",
      },
      "createFeatureSchema": Object {
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "impressionData": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "createFeatureStrategySchema": Object {
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "$ref": "#/components/schemas/parametersSchema",
          },
          "sortOrder": Object {
            "type": "number",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "createUserSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "email": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "password": Object {
            "type": "string",
          },
          "rootRole": Object {
            "type": "number",
          },
          "sendEmail": Object {
            "type": "boolean",
          },
          "username": Object {
            "type": "string",
          },
        },
        "required": Array [
          "rootRole",
        ],
        "type": "object",
      },
      "dateSchema": Object {
        "oneOf": Array [
          Object {
            "format": "date-time",
            "type": "string",
          },
          Object {
            "type": "number",
          },
        ],
      },
      "emailSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "email": Object {
            "type": "string",
          },
        },
        "required": Array [
          "email",
        ],
        "type": "object",
      },
      "environmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "enabled": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "protected": Object {
            "type": "boolean",
          },
          "sortOrder": Object {
            "type": "number",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "type",
          "enabled",
        ],
        "type": "object",
      },
      "environmentsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "environments": Object {
            "items": Object {
              "$ref": "#/components/schemas/environmentSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "environments",
        ],
        "type": "object",
      },
      "eventSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "type": "string",
          },
          "createdBy": Object {
            "type": "string",
          },
          "data": Object {
            "nullable": true,
            "type": "object",
          },
          "environment": Object {
            "nullable": true,
            "type": "string",
          },
          "featureName": Object {
            "nullable": true,
            "type": "string",
          },
          "id": Object {
            "minimum": 1,
            "type": "integer",
          },
          "preData": Object {
            "nullable": true,
            "type": "object",
          },
          "project": Object {
            "nullable": true,
            "type": "string",
          },
          "tags": Object {
            "items": Object {
              "$ref": "#/components/schemas/tagSchema",
            },
            "nullable": true,
            "type": "array",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "createdAt",
          "type",
          "createdBy",
        ],
        "type": "object",
      },
      "eventsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "events": Object {
            "items": Object {
              "$ref": "#/components/schemas/eventSchema",
            },
            "type": "array",
          },
          "version": Object {
            "minimum": 1,
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "events",
        ],
        "type": "object",
      },
      "exportParametersSchema": Object {
        "properties": Object {
          "download": Object {
            "type": "boolean",
          },
          "environments": Object {
            "type": "boolean",
          },
          "featureToggles": Object {
            "type": "boolean",
          },
          "format": Object {
            "type": "string",
          },
          "projects": Object {
            "type": "boolean",
          },
          "strategies": Object {
            "type": "boolean",
          },
          "tags": Object {
            "type": "boolean",
          },
        },
        "type": "object",
      },
      "featureEnvironmentMetricsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "appName": Object {
            "type": "string",
          },
          "environment": Object {
            "type": "string",
          },
          "featureName": Object {
            "type": "string",
          },
          "no": Object {
            "type": "number",
          },
          "timestamp": Object {
            "format": "date-time",
            "type": "string",
          },
          "yes": Object {
            "type": "number",
          },
        },
        "required": Array [
          "environment",
          "timestamp",
          "yes",
          "no",
        ],
        "type": "object",
      },
      "featureEnvironmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "enabled": Object {
            "type": "boolean",
          },
          "environment": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "strategies": Object {
            "items": Object {
              "additionalProperties": false,
              "properties": Object {
                "constraints": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/constraintSchema",
                  },
                  "type": "array",
                },
                "createdAt": Object {
                  "format": "date-time",
                  "type": "string",
                },
                "environment": Object {
                  "type": "string",
                },
                "featureName": Object {
                  "type": "string",
                },
                "id": Object {
                  "type": "string",
                },
                "parameters": Object {
                  "$ref": "#/components/schemas/parametersSchema",
                },
                "projectId": Object {
                  "type": "string",
                },
                "sortOrder": Object {
                  "type": "number",
                },
                "strategyName": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "id",
                "featureName",
                "projectId",
                "environment",
                "strategyName",
                "constraints",
                "parameters",
              ],
              "type": "object",
            },
            "type": "array",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "enabled",
        ],
        "type": "object",
      },
      "featureEventsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "events": Object {
            "items": Object {
              "$ref": "#/components/schemas/eventSchema",
            },
            "type": "array",
          },
          "toggleName": Object {
            "type": "string",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "toggleName",
          "events",
        ],
        "type": "object",
      },
      "featureMetricsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "data": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureEnvironmentMetricsSchema",
            },
            "type": "array",
          },
          "maturity": Object {
            "type": "string",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "version",
          "maturity",
          "data",
        ],
        "type": "object",
      },
      "featureSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "archived": Object {
            "type": "boolean",
          },
          "createdAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "enabled": Object {
            "type": "boolean",
          },
          "environments": Object {
            "items": Object {
              "$ref": "#/components/schemas/environmentSchema",
            },
            "type": "array",
          },
          "impressionData": Object {
            "type": "boolean",
          },
          "lastSeenAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "project": Object {
            "type": "string",
          },
          "stale": Object {
            "type": "boolean",
          },
          "strategies": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureStrategySchema",
            },
            "type": "array",
          },
          "type": Object {
            "type": "string",
          },
          "variants": Object {
            "items": Object {
              "$ref": "#/components/schemas/variantSchema",
            },
            "type": "array",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "featureStrategySchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "id": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "$ref": "#/components/schemas/parametersSchema",
          },
          "segments": Object {
            "items": Object {
              "type": "number",
            },
            "type": "array",
          },
          "sortOrder": Object {
            "type": "number",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "featureStrategySegmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "featureStrategyId": Object {
            "type": "string",
          },
          "segmentId": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "segmentId",
          "featureStrategyId",
        ],
        "type": "object",
      },
      "featureTagSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "featureName": Object {
            "type": "string",
          },
          "tagType": Object {
            "type": "string",
          },
          "tagValue": Object {
            "type": "string",
          },
          "type": Object {
            "type": "string",
          },
          "value": Object {
            "type": "string",
          },
        },
        "required": Array [
          "featureName",
          "tagValue",
        ],
        "type": "object",
      },
      "featureTypeSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "id": Object {
            "type": "string",
          },
          "lifetimeDays": Object {
            "nullable": true,
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
          "description",
          "lifetimeDays",
        ],
        "type": "object",
      },
      "featureTypesSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "types": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureTypeSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "types",
        ],
        "type": "object",
      },
      "featureUsageSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "featureName": Object {
            "type": "string",
          },
          "lastHourUsage": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureEnvironmentMetricsSchema",
            },
            "type": "array",
          },
          "maturity": Object {
            "type": "string",
          },
          "seenApplications": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "version",
          "maturity",
          "featureName",
          "lastHourUsage",
          "seenApplications",
        ],
        "type": "object",
      },
      "featureVariantsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "variants": Object {
            "items": Object {
              "$ref": "#/components/schemas/variantSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "variants",
        ],
        "type": "object",
      },
      "featuresSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "features",
        ],
        "type": "object",
      },
      "feedbackSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "feedbackId": Object {
            "type": "string",
          },
          "given": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "neverShow": Object {
            "type": "boolean",
          },
          "userId": Object {
            "type": "number",
          },
        },
        "required": Array [],
        "type": "object",
      },
      "healthCheckSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "health": Object {
            "enum": Array [
              "GOOD",
              "BAD",
            ],
            "type": "string",
          },
        },
        "required": Array [
          "health",
        ],
        "type": "object",
      },
      "healthOverviewSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "environments": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureSchema",
            },
            "type": "array",
          },
          "health": Object {
            "type": "number",
          },
          "members": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "updatedAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "version",
          "name",
        ],
        "type": "object",
      },
      "healthReportSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "activeCount": Object {
            "type": "number",
          },
          "description": Object {
            "type": "string",
          },
          "environments": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureSchema",
            },
            "type": "array",
          },
          "health": Object {
            "type": "number",
          },
          "members": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "potentiallyStaleCount": Object {
            "type": "number",
          },
          "staleCount": Object {
            "type": "number",
          },
          "updatedAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "version",
          "name",
          "potentiallyStaleCount",
          "activeCount",
          "staleCount",
        ],
        "type": "object",
      },
      "idSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "id": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
        ],
        "type": "object",
      },
      "legalValueSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "value": Object {
            "type": "string",
          },
        },
        "required": Array [
          "value",
        ],
        "type": "object",
      },
      "loginSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "password": Object {
            "type": "string",
          },
          "username": Object {
            "type": "string",
          },
        },
        "required": Array [
          "username",
          "password",
        ],
        "type": "object",
      },
      "meSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "feedback": Object {
            "items": Object {
              "$ref": "#/components/schemas/feedbackSchema",
            },
            "type": "array",
          },
          "permissions": Object {
            "items": Object {
              "$ref": "#/components/schemas/permissionSchema",
            },
            "type": "array",
          },
          "splash": Object {
            "additionalProperties": Object {
              "type": "boolean",
            },
            "type": "object",
          },
          "user": Object {
            "$ref": "#/components/schemas/userSchema",
          },
        },
        "required": Array [
          "user",
          "permissions",
          "feedback",
          "splash",
        ],
        "type": "object",
      },
      "nameSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "overrideSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "contextName": Object {
            "type": "string",
          },
          "values": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": Array [
          "contextName",
          "values",
        ],
        "type": "object",
      },
      "parametersSchema": Object {
        "additionalProperties": Object {
          "type": "string",
        },
        "type": "object",
      },
      "passwordSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "confirmPassword": Object {
            "type": "string",
          },
          "password": Object {
            "type": "string",
          },
        },
        "required": Array [
          "password",
        ],
        "type": "object",
      },
      "patchSchema": Object {
        "properties": Object {
          "from": Object {
            "type": "string",
          },
          "op": Object {
            "enum": Array [
              "add",
              "remove",
              "replace",
              "copy",
              "move",
            ],
            "type": "string",
          },
          "path": Object {
            "type": "string",
          },
          "value": Object {},
        },
        "required": Array [
          "path",
          "op",
        ],
        "type": "object",
      },
      "patchesSchema": Object {
        "items": Object {
          "$ref": "#/components/schemas/patchSchema",
        },
        "type": "array",
      },
      "permissionSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "environment": Object {
            "type": "string",
          },
          "permission": Object {
            "type": "string",
          },
          "project": Object {
            "type": "string",
          },
        },
        "required": Array [
          "permission",
        ],
        "type": "object",
      },
      "projectEnvironmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "environment": Object {
            "type": "string",
          },
        },
        "required": Array [
          "environment",
        ],
        "type": "object",
      },
      "projectSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "featureCount": Object {
            "type": "number",
          },
          "health": Object {
            "type": "number",
          },
          "id": Object {
            "type": "string",
          },
          "memberCount": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "updatedAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
        ],
        "type": "object",
      },
      "projectsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "projects": Object {
            "items": Object {
              "$ref": "#/components/schemas/projectSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "projects",
        ],
        "type": "object",
      },
      "resetPasswordSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "resetPasswordUrl": Object {
            "type": "string",
          },
        },
        "required": Array [
          "resetPasswordUrl",
        ],
        "type": "object",
      },
      "roleSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "id": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "type",
          "name",
        ],
        "type": "object",
      },
      "segmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "description": Object {
            "nullable": true,
            "type": "string",
          },
          "id": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "constraints",
        ],
        "type": "object",
      },
      "sortOrderSchema": Object {
        "additionalProperties": Object {
          "type": "number",
        },
        "type": "object",
      },
      "splashSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "seen": Object {
            "type": "boolean",
          },
          "splashId": Object {
            "type": "string",
          },
          "userId": Object {
            "type": "number",
          },
        },
        "required": Array [
          "userId",
          "splashId",
          "seen",
        ],
        "type": "object",
      },
      "stateSchema": Object {
        "additionalProperties": true,
        "properties": Object {
          "environments": Object {
            "items": Object {
              "$ref": "#/components/schemas/environmentSchema",
            },
            "type": "array",
          },
          "featureEnvironments": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureEnvironmentSchema",
            },
            "type": "array",
          },
          "featureStrategies": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureStrategySchema",
            },
            "type": "array",
          },
          "featureStrategySegments": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureStrategySegmentSchema",
            },
            "type": "array",
          },
          "featureTags": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureTagSchema",
            },
            "type": "array",
          },
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureSchema",
            },
            "type": "array",
          },
          "projects": Object {
            "items": Object {
              "$ref": "#/components/schemas/projectSchema",
            },
            "type": "array",
          },
          "segments": Object {
            "items": Object {
              "$ref": "#/components/schemas/segmentSchema",
            },
            "type": "array",
          },
          "strategies": Object {
            "items": Object {
              "$ref": "#/components/schemas/strategySchema",
            },
            "type": "array",
          },
          "tagTypes": Object {
            "items": Object {
              "$ref": "#/components/schemas/tagTypeSchema",
            },
            "type": "array",
          },
          "tags": Object {
            "items": Object {
              "$ref": "#/components/schemas/tagSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
        ],
        "type": "object",
      },
      "strategiesSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "strategies": Object {
            "items": Object {
              "$ref": "#/components/schemas/strategySchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "strategies",
        ],
        "type": "object",
      },
      "strategySchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "deprecated": Object {
            "type": "boolean",
          },
          "description": Object {
            "type": "string",
          },
          "displayName": Object {
            "nullable": true,
            "type": "string",
          },
          "editable": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "items": Object {
              "additionalProperties": false,
              "properties": Object {
                "description": Object {
                  "type": "string",
                },
                "name": Object {
                  "type": "string",
                },
                "required": Object {
                  "type": "boolean",
                },
                "type": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
        },
        "required": Array [
          "name",
          "displayName",
          "description",
          "editable",
          "deprecated",
          "parameters",
        ],
        "type": "object",
      },
      "tagSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "type": Object {
            "type": "string",
          },
          "value": Object {
            "type": "string",
          },
        },
        "required": Array [
          "value",
          "type",
        ],
        "type": "object",
      },
      "tagTypeSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "icon": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "tagTypesSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "tagTypes": Object {
            "items": Object {
              "$ref": "#/components/schemas/tagTypeSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "tagTypes",
        ],
        "type": "object",
      },
      "tagWithVersionSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "tag": Object {
            "$ref": "#/components/schemas/tagSchema",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "tag",
        ],
        "type": "object",
      },
      "tagsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "tags": Object {
            "items": Object {
              "$ref": "#/components/schemas/tagSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "tags",
        ],
        "type": "object",
      },
      "tokenUserSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdBy": Object {
            "nullable": true,
            "type": "string",
          },
          "email": Object {
            "type": "string",
          },
          "id": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "role": Object {
            "$ref": "#/components/schemas/roleSchema",
          },
          "token": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
          "email",
          "token",
          "createdBy",
          "role",
        ],
        "type": "object",
      },
      "uiConfigSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "authenticationType": Object {
            "enum": Array [
              "open-source",
              "demo",
              "enterprise",
              "hosted",
              "custom",
              "none",
            ],
            "type": "string",
          },
          "baseUriPath": Object {
            "type": "string",
          },
          "disablePasswordAuth": Object {
            "type": "boolean",
          },
          "environment": Object {
            "type": "string",
          },
          "flags": Object {
            "additionalProperties": Object {
              "type": "boolean",
            },
            "type": "object",
          },
          "links": Object {
            "items": Object {
              "type": "object",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "segmentValuesLimit": Object {
            "type": "number",
          },
          "slogan": Object {
            "type": "string",
          },
          "strategySegmentsLimit": Object {
            "type": "number",
          },
          "unleashUrl": Object {
            "type": "string",
          },
          "version": Object {
            "type": "string",
          },
          "versionInfo": Object {
            "$ref": "#/components/schemas/versionSchema",
          },
        },
        "required": Array [
          "version",
          "unleashUrl",
          "baseUriPath",
          "versionInfo",
          "disablePasswordAuth",
          "segmentValuesLimit",
          "strategySegmentsLimit",
        ],
        "type": "object",
      },
      "updateApiTokenSchema": Object {
        "properties": Object {
          "expiresAt": Object {
            "format": "date-time",
            "type": "string",
          },
        },
        "required": Array [
          "expiresAt",
        ],
        "type": "object",
      },
      "updateFeatureSchema": Object {
        "properties": Object {
          "archived": Object {
            "type": "boolean",
          },
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "createdAt": Object {
            "format": "date-time",
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "impressionData": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "stale": Object {
            "type": "boolean",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "updateFeatureStrategySchema": Object {
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "$ref": "#/components/schemas/parametersSchema",
          },
          "sortOrder": Object {
            "type": "number",
          },
        },
        "type": "object",
      },
      "updateTagTypeSchema": Object {
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "icon": Object {
            "type": "string",
          },
        },
        "type": "object",
      },
      "updateUserSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "email": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "rootRole": Object {
            "type": "number",
          },
        },
        "type": "object",
      },
      "upsertContextFieldSchema": Object {
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "legalValues": Object {
            "items": Object {
              "$ref": "#/components/schemas/legalValueSchema",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "sortOrder": Object {
            "type": "number",
          },
          "stickiness": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "upsertStrategySchema": Object {
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "editable": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "items": Object {
              "properties": Object {
                "description": Object {
                  "type": "string",
                },
                "name": Object {
                  "type": "string",
                },
                "required": Object {
                  "type": "boolean",
                },
                "type": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "userSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "type": "string",
          },
          "email": Object {
            "type": "string",
          },
          "emailSent": Object {
            "type": "boolean",
          },
          "id": Object {
            "type": "number",
          },
          "imageUrl": Object {
            "type": "string",
          },
          "inviteLink": Object {
            "type": "string",
          },
          "isAPI": Object {
            "type": "boolean",
          },
          "loginAttempts": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "rootRole": Object {
            "type": "number",
          },
          "seenAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "username": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
        ],
        "type": "object",
      },
      "usersSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "rootRoles": Object {
            "items": Object {
              "$ref": "#/components/schemas/roleSchema",
            },
            "type": "array",
          },
          "users": Object {
            "items": Object {
              "$ref": "#/components/schemas/userSchema",
            },
            "type": "array",
          },
        },
        "required": Array [
          "users",
        ],
        "type": "object",
      },
      "usersSearchSchema": Object {
        "items": Object {
          "$ref": "#/components/schemas/userSchema",
        },
        "type": "array",
      },
      "validatePasswordSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "password": Object {
            "type": "string",
          },
        },
        "required": Array [
          "password",
        ],
        "type": "object",
      },
      "validateTagTypeSchema": Object {
        "properties": Object {
          "tagType": Object {
            "$ref": "#/components/schemas/tagTypeSchema",
          },
          "valid": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "valid",
          "tagType",
        ],
        "type": "object",
      },
      "variantSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "name": Object {
            "type": "string",
          },
          "overrides": Object {
            "items": Object {
              "$ref": "#/components/schemas/overrideSchema",
            },
            "type": "array",
          },
          "payload": Object {
            "properties": Object {
              "type": Object {
                "type": "string",
              },
              "value": Object {
                "type": "string",
              },
            },
            "required": Array [
              "type",
              "value",
            ],
            "type": "object",
          },
          "stickiness": Object {
            "type": "string",
          },
          "weight": Object {
            "type": "number",
          },
          "weightType": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "weight",
          "weightType",
          "stickiness",
        ],
        "type": "object",
      },
      "variantsSchema": Object {
        "items": Object {
          "$ref": "#/components/schemas/variantSchema",
        },
        "type": "array",
      },
      "versionSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "current": Object {
            "additionalProperties": false,
            "properties": Object {
              "enterprise": Object {
                "type": "string",
              },
              "oss": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
          "instanceId": Object {
            "type": "string",
          },
          "isLatest": Object {
            "type": "boolean",
          },
          "latest": Object {
            "additionalProperties": false,
            "properties": Object {
              "enterprise": Object {
                "type": "string",
              },
              "oss": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": Array [
          "current",
          "latest",
          "isLatest",
          "instanceId",
        ],
        "type": "object",
      },
    },
    "securitySchemes": Object {
      "apiKey": Object {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
      },
    },
  },
  "info": Object {
    "title": "Unleash API",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/api/admin/addons": Object {
      "get": Object {
        "operationId": "getAddons",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/addonsSchema",
                },
              },
            },
            "description": "addonsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createAddon",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/addonSchema",
              },
            },
          },
          "description": "addonSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/addonSchema",
                },
              },
            },
            "description": "addonSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/addons/{id}": Object {
      "delete": Object {
        "operationId": "deleteAddon",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getAddon",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/addonSchema",
                },
              },
            },
            "description": "addonSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateAddon",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/addonSchema",
              },
            },
          },
          "description": "addonSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/addonSchema",
                },
              },
            },
            "description": "addonSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/api-tokens": Object {
      "get": Object {
        "operationId": "getAllApiTokens",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apiTokensSchema",
                },
              },
            },
            "description": "apiTokensSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createApiToken",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/createApiTokenSchema",
              },
            },
          },
          "description": "createApiTokenSchema",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apiTokenSchema",
                },
              },
            },
            "description": "apiTokenSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/api-tokens/{token}": Object {
      "delete": Object {
        "operationId": "deleteApiToken",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateApiToken",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/updateApiTokenSchema",
              },
            },
          },
          "description": "updateApiTokenSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/archive/features": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "getArchivedFeatures",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/archive/features/{projectId}": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "getArchivedFeaturesByProjectId",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/archive/revive/{featureName}": Object {
      "post": Object {
        "operationId": "reviveFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/archive/{featureName}": Object {
      "delete": Object {
        "operationId": "deleteFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/client-metrics/features/{name}": Object {
      "get": Object {
        "operationId": "getFeatureUsageSummary",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureUsageSchema",
                },
              },
            },
            "description": "featureUsageSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/client-metrics/features/{name}/raw": Object {
      "get": Object {
        "operationId": "getRawFeatureMetrics",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureMetricsSchema",
                },
              },
            },
            "description": "featureMetricsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/constraints/validate": Object {
      "post": Object {
        "operationId": "validateConstraint",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/constraintSchema",
              },
            },
          },
          "description": "constraintSchema",
          "required": true,
        },
        "responses": Object {
          "204": Object {
            "description": "validConstraint",
          },
          "400": Object {
            "description": "invalidConstraint",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/context": Object {
      "get": Object {
        "operationId": "getContextFields",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/contextFieldsSchema",
                },
              },
            },
            "description": "contextFieldsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createContextField",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/upsertContextFieldSchema",
              },
            },
          },
          "description": "upsertContextFieldSchema",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/context/validate": Object {
      "post": Object {
        "operationId": "validate",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/nameSchema",
              },
            },
          },
          "description": "nameSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/context/{contextField}": Object {
      "delete": Object {
        "operationId": "deleteContextField",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "contextField",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getContextField",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "contextField",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/contextFieldSchema",
                },
              },
            },
            "description": "contextFieldSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateContextField",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "contextField",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/upsertContextFieldSchema",
              },
            },
          },
          "description": "upsertContextFieldSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/environments": Object {
      "get": Object {
        "operationId": "getAllEnvironments",
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/environments/sort-order": Object {
      "put": Object {
        "operationId": "updateSortOrder",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/sortOrderSchema",
              },
            },
          },
          "description": "sortOrderSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/environments/{name}": Object {
      "get": Object {
        "operationId": "getEnvironment",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/environmentSchema",
                },
              },
            },
            "description": "environmentSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/environments/{name}/off": Object {
      "post": Object {
        "operationId": "toggleEnvironmentOff",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/environments/{name}/on": Object {
      "post": Object {
        "operationId": "toggleEnvironmentOn",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/events": Object {
      "get": Object {
        "description": "Returns **the last 100** from the Unleash instance when called without a query parameter. When called with a \`project\` parameter, returns **all events** for the specified project.

If the provided project does not exist, the list of events will be empty.",
        "operationId": "getEvents",
        "parameters": Array [
          Object {
            "description": "The name of the project whose events you want to retrieve",
            "in": "query",
            "name": "project",
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/eventsSchema",
                },
              },
            },
            "description": "eventsSchema",
          },
          "401": Object {
            "description": "Authorization information is missing or invalid. Provide a valid API token as the \`authorization\` header, e.g. \`authorization:*.*.my-admin-token\`.",
          },
        },
        "summary": "Get the most recent events from the Unleash instance or all events related to a project.",
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/events/{featureName}": Object {
      "get": Object {
        "description": "Returns all events related to the specified feature toggle. If the feature toggle does not exist, the list of events will be empty.",
        "operationId": "getEventsForToggle",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureEventsSchema",
                },
              },
            },
            "description": "featureEventsSchema",
          },
          "401": Object {
            "description": "Authorization information is missing or invalid. Provide a valid API token as the \`authorization\` header, e.g. \`authorization:*.*.my-admin-token\`.",
          },
        },
        "summary": "Get all events related to a specific feature toggle.",
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/feature-types": Object {
      "get": Object {
        "operationId": "getAllFeatureTypes",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureTypesSchema",
                },
              },
            },
            "description": "featureTypesSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "getAllToggles",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features/validate": Object {
      "post": Object {
        "operationId": "validateFeature",
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features/{featureName}/tags": Object {
      "get": Object {
        "operationId": "listTags",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagsSchema",
                },
              },
            },
            "description": "tagsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "addTag",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/tagSchema",
              },
            },
          },
          "description": "tagSchema",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagSchema",
                },
              },
            },
            "description": "tagSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features/{featureName}/tags/{type}/{value}": Object {
      "delete": Object {
        "operationId": "removeTag",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/feedback": Object {
      "post": Object {
        "operationId": "createFeedback",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/feedbackSchema",
              },
            },
          },
          "description": "feedbackSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/feedbackSchema",
                },
              },
            },
            "description": "feedbackSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/feedback/{id}": Object {
      "put": Object {
        "operationId": "updateFeedback",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/feedbackSchema",
              },
            },
          },
          "description": "feedbackSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/feedbackSchema",
                },
              },
            },
            "description": "feedbackSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/metrics/applications": Object {
      "get": Object {
        "operationId": "getApplications",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/applicationsSchema",
                },
              },
            },
            "description": "applicationsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/metrics/applications/{appName}": Object {
      "delete": Object {
        "operationId": "deleteApplication",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getApplication",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/applicationSchema",
                },
              },
            },
            "description": "applicationSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createApplication",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "appName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/applicationSchema",
              },
            },
          },
          "description": "applicationSchema",
          "required": true,
        },
        "responses": Object {
          "202": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects": Object {
      "get": Object {
        "operationId": "getProjects",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/projectsSchema",
                },
              },
            },
            "description": "projectsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}": Object {
      "get": Object {
        "operationId": "getProjectHealthOverview",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/healthOverviewSchema",
                },
              },
            },
            "description": "healthOverviewSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/environments": Object {
      "post": Object {
        "operationId": "addEnvironmentToProject",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/projectEnvironmentSchema",
              },
            },
          },
          "description": "projectEnvironmentSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/environments/{environment}": Object {
      "delete": Object {
        "operationId": "removeEnvironmentFromProject",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features": Object {
      "get": Object {
        "operationId": "getFeatures",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/createFeatureSchema",
              },
            },
          },
          "description": "createFeatureSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}": Object {
      "delete": Object {
        "operationId": "archiveFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "patch": Object {
        "operationId": "patchFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/patchesSchema",
              },
            },
          },
          "description": "patchesSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/updateFeatureSchema",
              },
            },
          },
          "description": "updateFeatureSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/clone": Object {
      "post": Object {
        "operationId": "cloneFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/cloneFeatureSchema",
              },
            },
          },
          "description": "cloneFeatureSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}": Object {
      "get": Object {
        "operationId": "getFeatureEnvironment",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureEnvironmentSchema",
                },
              },
            },
            "description": "featureEnvironmentSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/off": Object {
      "post": Object {
        "operationId": "toggleFeatureEnvironmentOff",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/on": Object {
      "post": Object {
        "operationId": "toggleFeatureEnvironmentOn",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/strategies": Object {
      "get": Object {
        "operationId": "getFeatureStrategies",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "addFeatureStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/createFeatureStrategySchema",
              },
            },
          },
          "description": "createFeatureStrategySchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/strategies/{strategyId}": Object {
      "delete": Object {
        "operationId": "deleteFeatureStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getFeatureStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "patch": Object {
        "operationId": "patchFeatureStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/patchesSchema",
              },
            },
          },
          "description": "patchesSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateFeatureStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/updateFeatureStrategySchema",
              },
            },
          },
          "description": "updateFeatureStrategySchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/variants": Object {
      "get": Object {
        "operationId": "getFeatureVariants",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureVariantsSchema",
                },
              },
            },
            "description": "featureVariantsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "patch": Object {
        "operationId": "patchFeatureVariants",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/patchesSchema",
              },
            },
          },
          "description": "patchesSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureVariantsSchema",
                },
              },
            },
            "description": "featureVariantsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "overwriteFeatureVariants",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/variantsSchema",
              },
            },
          },
          "description": "variantsSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureVariantsSchema",
                },
              },
            },
            "description": "featureVariantsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/health-report": Object {
      "get": Object {
        "operationId": "getProjectHealthReport",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/healthReportSchema",
                },
              },
            },
            "description": "healthReportSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/splash/{id}": Object {
      "post": Object {
        "operationId": "updateSplashSettings",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/splashSchema",
                },
              },
            },
            "description": "splashSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/state/export": Object {
      "get": Object {
        "operationId": "export",
        "parameters": Array [
          Object {
            "$ref": "#/components/schema/exportParametersSchema",
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/stateSchema",
                },
              },
            },
            "description": "stateSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/state/import": Object {
      "post": Object {
        "operationId": "import",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/stateSchema",
              },
            },
          },
          "description": "stateSchema",
          "required": true,
        },
        "responses": Object {
          "202": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/strategies": Object {
      "get": Object {
        "operationId": "getAllStrategies",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/strategiesSchema",
                },
              },
            },
            "description": "strategiesSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createStrategy",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/upsertStrategySchema",
              },
            },
          },
          "description": "upsertStrategySchema",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/strategies/{name}": Object {
      "delete": Object {
        "operationId": "removeStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/strategySchema",
                },
              },
            },
            "description": "strategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/strategies/{strategyName}": Object {
      "put": Object {
        "operationId": "updateStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "strategyName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/upsertStrategySchema",
              },
            },
          },
          "description": "upsertStrategySchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/strategies/{strategyName}/deprecate": Object {
      "post": Object {
        "operationId": "deprecateStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "strategyName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/strategies/{strategyName}/reactivate": Object {
      "post": Object {
        "operationId": "reactivateStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "strategyName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/tag-types": Object {
      "get": Object {
        "operationId": "getTagTypes",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagTypesSchema",
                },
              },
            },
            "description": "tagTypesSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createTagType",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/tagTypeSchema",
              },
            },
          },
          "description": "tagTypeSchema",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagTypeSchema",
                },
              },
            },
            "description": "tagTypeSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/tag-types/validate": Object {
      "post": Object {
        "operationId": "validateTagType",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/tagTypeSchema",
              },
            },
          },
          "description": "tagTypeSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/validateTagTypeSchema",
                },
              },
            },
            "description": "validateTagTypeSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/tag-types/{name}": Object {
      "delete": Object {
        "operationId": "deleteTagType",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getTagType",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagTypeSchema",
                },
              },
            },
            "description": "tagTypeSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateTagType",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/updateTagTypeSchema",
              },
            },
          },
          "description": "updateTagTypeSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/tags": Object {
      "get": Object {
        "operationId": "getTags",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagsSchema",
                },
              },
            },
            "description": "tagsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createTag",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/tagSchema",
              },
            },
          },
          "description": "tagSchema",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/tags/{type}": Object {
      "get": Object {
        "operationId": "getTagsByType",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagsSchema",
                },
              },
            },
            "description": "tagsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/tags/{type}/{value}": Object {
      "delete": Object {
        "operationId": "deleteTag",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getTag",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagWithVersionSchema",
                },
              },
            },
            "description": "tagWithVersionSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/ui-config": Object {
      "get": Object {
        "operationId": "getUIConfig",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/uiConfigSchema",
                },
              },
            },
            "description": "uiConfigSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user": Object {
      "get": Object {
        "operationId": "getMe",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/meSchema",
                },
              },
            },
            "description": "meSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user-admin": Object {
      "get": Object {
        "operationId": "getUsers",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/usersSchema",
                },
              },
            },
            "description": "usersSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createUser",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/createUserSchema",
              },
            },
          },
          "description": "createUserSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/userSchema",
                },
              },
            },
            "description": "userSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user-admin/reset-password": Object {
      "post": Object {
        "operationId": "resetUserPassword",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/idSchema",
              },
            },
          },
          "description": "idSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/resetPasswordSchema",
                },
              },
            },
            "description": "resetPasswordSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user-admin/search": Object {
      "get": Object {
        "operationId": "searchUsers",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/usersSchema",
                },
              },
            },
            "description": "usersSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user-admin/validate-password": Object {
      "post": Object {
        "operationId": "validateUserPassword",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/passwordSchema",
              },
            },
          },
          "description": "passwordSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user-admin/{id}": Object {
      "delete": Object {
        "operationId": "deleteUser",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getUser",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/userSchema",
                },
              },
            },
            "description": "userSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateUser",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/updateUserSchema",
              },
            },
          },
          "description": "updateUserSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/userSchema",
                },
              },
            },
            "description": "userSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user-admin/{id}/change-password": Object {
      "post": Object {
        "operationId": "changeUserPassword",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/passwordSchema",
              },
            },
          },
          "description": "passwordSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/user/change-password": Object {
      "post": Object {
        "operationId": "changeMyPassword",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/passwordSchema",
              },
            },
          },
          "description": "passwordSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
          "400": Object {
            "description": "passwordMismatch",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/client/features": Object {
      "get": Object {
        "operationId": "getAllClientFeatures",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/clientFeaturesSchema",
                },
              },
            },
            "description": "clientFeaturesSchema",
          },
        },
        "tags": Array [
          "client",
        ],
      },
    },
    "/api/client/features/{featureName}": Object {
      "get": Object {
        "operationId": "getClientFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/clientFeaturesSchema",
                },
              },
            },
            "description": "clientFeaturesSchema",
          },
        },
        "tags": Array [
          "client",
        ],
      },
    },
    "/api/client/metrics": Object {
      "post": Object {
        "operationId": "registerClientMetrics",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/clientMetricsSchema",
              },
            },
          },
          "description": "clientMetricsSchema",
          "required": true,
        },
        "responses": Object {
          "202": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptyResponse",
                },
              },
            },
            "description": "emptyResponse",
          },
          "400": Object {
            "description": "The request data do not match what we expect.",
          },
        },
        "tags": Array [
          "client",
        ],
      },
    },
    "/api/client/register": Object {
      "post": Object {
        "operationId": "registerClientApplication",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/clientApplicationSchema",
              },
            },
          },
          "description": "clientApplicationSchema",
          "required": true,
        },
        "responses": Object {
          "202": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "client",
        ],
      },
    },
    "/auth/reset/password": Object {
      "post": Object {
        "operationId": "changePassword",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/changePasswordSchema",
              },
            },
          },
          "description": "changePasswordSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "other",
        ],
      },
    },
    "/auth/reset/password-email": Object {
      "post": Object {
        "operationId": "sendResetPasswordEmail",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/emailSchema",
              },
            },
          },
          "description": "emailSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "other",
        ],
      },
    },
    "/auth/reset/validate": Object {
      "get": Object {
        "operationId": "validateToken",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tokenUserSchema",
                },
              },
            },
            "description": "tokenUserSchema",
          },
        },
        "tags": Array [
          "auth",
        ],
      },
    },
    "/auth/reset/validate-password": Object {
      "post": Object {
        "operationId": "validatePassword",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/validatePasswordSchema",
              },
            },
          },
          "description": "validatePasswordSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "emptyResponse",
          },
        },
        "tags": Array [
          "other",
        ],
      },
    },
    "/auth/simple/login": Object {
      "post": Object {
        "operationId": "login",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/loginSchema",
              },
            },
          },
          "description": "loginSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/userSchema",
                },
              },
            },
            "description": "userSchema",
          },
        },
        "tags": Array [
          "auth",
        ],
      },
    },
    "/health": Object {
      "get": Object {
        "operationId": "getHealth",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/healthCheckSchema",
                },
              },
            },
            "description": "healthCheckSchema",
          },
          "500": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/healthCheckSchema",
                },
              },
            },
            "description": "healthCheckSchema",
          },
        },
        "tags": Array [
          "other",
        ],
      },
    },
  },
  "security": Array [
    Object {
      "apiKey": Array [],
    },
  ],
  "servers": Array [
    Object {
      "url": "http://localhost:4242",
    },
  ],
}
`;
