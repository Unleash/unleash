// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should serve the OpenAPI UI 1`] = `
"<!DOCTYPE html>
<html>
  <head>
    <title>Swagger UI</title>
    <meta charset=\\"utf-8\\"/>
    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\">
    <style>
      html {
          box-sizing: border-box;
          overflow: -moz-scrollbars-vertical;
          overflow-y: scroll;
      }
      *,
      *:before,
      *:after {
          box-sizing: inherit;
      }
      body {
        margin: 0;
        padding: 0;
        background: #fafafa;
      }
    </style>
    
      <link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"./swagger-ui.css\\" >
    
  </head>
  <body>
    
      <div id=\\"swagger-ui\\"></div>
      <script src=\\"./swagger-ui-bundle.js\\"></script>
      <script src=\\"./swagger-ui-standalone-preset.js\\"></script>
      <script>
        window.onload = function () {
          window.ui = SwaggerUIBundle({
            url: \\"/docs/openapi.json\\",
            dom_id: '#swagger-ui'
          })
        }
      </script>
    
  </body>
</html>
  "
`;

exports[`should serve the OpenAPI spec 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "cloneFeatureSchema": Object {
        "properties": Object {
          "name": Object {
            "type": "string",
          },
          "replaceGroupId": Object {
            "type": "boolean",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "constraintSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "caseInsensitive": Object {
            "type": "boolean",
          },
          "contextName": Object {
            "type": "string",
          },
          "inverted": Object {
            "type": "boolean",
          },
          "operator": Object {
            "enum": Array [
              "NOT_IN",
              "IN",
              "STR_ENDS_WITH",
              "STR_STARTS_WITH",
              "STR_CONTAINS",
              "NUM_EQ",
              "NUM_GT",
              "NUM_GTE",
              "NUM_LT",
              "NUM_LTE",
              "DATE_AFTER",
              "DATE_BEFORE",
              "SEMVER_EQ",
              "SEMVER_GT",
              "SEMVER_LT",
            ],
            "type": "string",
          },
          "value": Object {
            "type": "string",
          },
          "values": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": Array [
          "contextName",
          "operator",
        ],
        "type": "object",
      },
      "createFeatureSchema": Object {
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "impressionData": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "createStrategySchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "$ref": "#/components/schemas/parametersSchema",
          },
          "sortOrder": Object {
            "type": "number",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "emptySchema": Object {
        "description": "emptySchema",
      },
      "environmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "enabled": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "sortOrder": Object {
            "type": "number",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "type",
          "enabled",
        ],
        "type": "object",
      },
      "featureEnvironmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "enabled": Object {
            "type": "boolean",
          },
          "environment": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "strategies": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureStrategySchema",
            },
            "type": "array",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "enabled",
        ],
        "type": "object",
      },
      "featureSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "archived": Object {
            "type": "boolean",
          },
          "createdAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "enabled": Object {
            "type": "boolean",
          },
          "environments": Object {
            "items": Object {
              "$ref": "#/components/schemas/environmentSchema",
            },
            "type": "array",
          },
          "impressionData": Object {
            "type": "boolean",
          },
          "lastSeenAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "project": Object {
            "type": "string",
          },
          "stale": Object {
            "type": "boolean",
          },
          "strategies": Object {
            "items": Object {
              "$ref": "#/components/schemas/strategySchema",
            },
            "type": "array",
          },
          "type": Object {
            "type": "string",
          },
          "variants": Object {
            "items": Object {
              "$ref": "#/components/schemas/variantSchema",
            },
            "type": "array",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "featureStrategySchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "createdAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "environment": Object {
            "type": "string",
          },
          "featureName": Object {
            "type": "string",
          },
          "id": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "$ref": "#/components/schemas/parametersSchema",
          },
          "projectId": Object {
            "type": "string",
          },
          "sortOrder": Object {
            "type": "number",
          },
          "strategyName": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "featureName",
          "strategyName",
          "constraints",
          "parameters",
          "environment",
        ],
        "type": "object",
      },
      "featureTypeSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "id": Object {
            "type": "string",
          },
          "lifetimeDays": Object {
            "nullable": true,
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
          "description",
          "lifetimeDays",
        ],
        "type": "object",
      },
      "featureTypesSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "types": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureTypeSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "types",
        ],
        "type": "object",
      },
      "featureVariantsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "variants": Object {
            "items": Object {
              "$ref": "#/components/schemas/variantSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "variants",
        ],
        "type": "object",
      },
      "featuresSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "features",
        ],
        "type": "object",
      },
      "healthOverviewSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "description": Object {
            "type": "string",
          },
          "environments": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureSchema",
            },
            "type": "array",
          },
          "health": Object {
            "type": "number",
          },
          "members": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "updatedAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "version",
          "name",
        ],
        "type": "object",
      },
      "healthReportSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "activeCount": Object {
            "type": "number",
          },
          "description": Object {
            "type": "string",
          },
          "environments": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
          "features": Object {
            "items": Object {
              "$ref": "#/components/schemas/featureSchema",
            },
            "type": "array",
          },
          "health": Object {
            "type": "number",
          },
          "members": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "potentiallyStaleCount": Object {
            "type": "number",
          },
          "staleCount": Object {
            "type": "number",
          },
          "updatedAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
          "version": Object {
            "type": "number",
          },
        },
        "required": Array [
          "version",
          "name",
          "potentiallyStaleCount",
          "activeCount",
          "staleCount",
        ],
        "type": "object",
      },
      "overrideSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "contextName": Object {
            "type": "string",
          },
          "values": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": Array [
          "contextName",
          "values",
        ],
        "type": "object",
      },
      "parametersSchema": Object {
        "additionalProperties": Object {
          "type": "string",
        },
        "type": "object",
      },
      "patchSchema": Object {
        "properties": Object {
          "from": Object {
            "type": "string",
          },
          "op": Object {
            "enum": Array [
              "add",
              "remove",
              "replace",
              "copy",
              "move",
            ],
            "type": "string",
          },
          "path": Object {
            "type": "string",
          },
          "value": Object {},
        },
        "required": Array [
          "path",
          "op",
        ],
        "type": "object",
      },
      "patchesSchema": Object {
        "items": Object {
          "$ref": "#/components/schemas/patchSchema",
        },
        "type": "array",
      },
      "projectEnvironmentSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "environment": Object {
            "type": "string",
          },
        },
        "required": Array [
          "environment",
        ],
        "type": "object",
      },
      "projectSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "createdAt": Object {
            "format": "date-time",
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "featureCount": Object {
            "type": "number",
          },
          "health": Object {
            "type": "number",
          },
          "id": Object {
            "type": "string",
          },
          "memberCount": Object {
            "type": "number",
          },
          "name": Object {
            "type": "string",
          },
          "updatedAt": Object {
            "format": "date-time",
            "nullable": true,
            "type": "string",
          },
        },
        "required": Array [
          "id",
          "name",
        ],
        "type": "object",
      },
      "projectsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "projects": Object {
            "items": Object {
              "$ref": "#/components/schemas/projectSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "projects",
        ],
        "type": "object",
      },
      "strategySchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "id": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "$ref": "#/components/schemas/parametersSchema",
          },
          "sortOrder": Object {
            "type": "number",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "tagSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "type": Object {
            "type": "string",
          },
          "value": Object {
            "type": "string",
          },
        },
        "required": Array [
          "value",
          "type",
        ],
        "type": "object",
      },
      "tagsSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "tags": Object {
            "items": Object {
              "$ref": "#/components/schemas/tagSchema",
            },
            "type": "array",
          },
          "version": Object {
            "type": "integer",
          },
        },
        "required": Array [
          "version",
          "tags",
        ],
        "type": "object",
      },
      "uiConfigSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "authenticationType": Object {
            "enum": Array [
              "open-source",
              "demo",
              "enterprise",
              "hosted",
              "custom",
              "none",
            ],
            "type": "string",
          },
          "baseUriPath": Object {
            "type": "string",
          },
          "disablePasswordAuth": Object {
            "type": "boolean",
          },
          "flags": Object {
            "additionalProperties": Object {
              "type": "boolean",
            },
            "type": "object",
          },
          "links": Object {
            "items": Object {
              "type": "object",
            },
            "type": "array",
          },
          "name": Object {
            "type": "string",
          },
          "segmentValuesLimit": Object {
            "type": "number",
          },
          "slogan": Object {
            "type": "string",
          },
          "strategySegmentsLimit": Object {
            "type": "number",
          },
          "unleashUrl": Object {
            "type": "string",
          },
          "version": Object {
            "type": "string",
          },
          "versionInfo": Object {
            "$ref": "#/components/schemas/versionSchema",
          },
        },
        "required": Array [
          "version",
          "unleashUrl",
          "baseUriPath",
          "versionInfo",
          "disablePasswordAuth",
          "segmentValuesLimit",
          "strategySegmentsLimit",
        ],
        "type": "object",
      },
      "updateFeatureSchema": Object {
        "properties": Object {
          "archived": Object {
            "type": "boolean",
          },
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "createdAt": Object {
            "format": "date-time",
            "type": "string",
          },
          "description": Object {
            "type": "string",
          },
          "impressionData": Object {
            "type": "boolean",
          },
          "name": Object {
            "type": "string",
          },
          "stale": Object {
            "type": "boolean",
          },
          "type": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
      "updateStrategySchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "constraints": Object {
            "items": Object {
              "$ref": "#/components/schemas/constraintSchema",
            },
            "type": "array",
          },
          "id": Object {
            "type": "string",
          },
          "name": Object {
            "type": "string",
          },
          "parameters": Object {
            "$ref": "#/components/schemas/parametersSchema",
          },
          "sortOrder": Object {
            "type": "number",
          },
        },
        "required": Array [],
        "type": "object",
      },
      "variantSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "name": Object {
            "type": "string",
          },
          "overrides": Object {
            "items": Object {
              "$ref": "#/components/schemas/overrideSchema",
            },
            "type": "array",
          },
          "payload": Object {
            "properties": Object {
              "type": Object {
                "type": "string",
              },
              "value": Object {
                "type": "string",
              },
            },
            "required": Array [
              "type",
              "value",
            ],
            "type": "object",
          },
          "stickiness": Object {
            "type": "string",
          },
          "weight": Object {
            "type": "number",
          },
          "weightType": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
          "weight",
          "weightType",
          "stickiness",
        ],
        "type": "object",
      },
      "variantsSchema": Object {
        "items": Object {
          "$ref": "#/components/schemas/variantSchema",
        },
        "type": "array",
      },
      "versionSchema": Object {
        "additionalProperties": false,
        "properties": Object {
          "current": Object {
            "additionalProperties": false,
            "properties": Object {
              "enterprise": Object {
                "type": "string",
              },
              "oss": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
          "instanceId": Object {
            "type": "string",
          },
          "isLatest": Object {
            "type": "boolean",
          },
          "latest": Object {
            "additionalProperties": false,
            "properties": Object {
              "enterprise": Object {
                "type": "string",
              },
              "oss": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": Array [
          "current",
          "latest",
          "isLatest",
          "instanceId",
        ],
        "type": "object",
      },
    },
    "securitySchemes": Object {
      "apiKey": Object {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
      },
    },
  },
  "info": Object {
    "title": "Unleash API",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/api/admin/archive/features": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "getArchivedFeatures",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/archive/features/{projectId}": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "getArchivedFeaturesByProjectId",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/archive/revive/{featureName}": Object {
      "post": Object {
        "operationId": "reviveFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/archive/{featureName}": Object {
      "delete": Object {
        "operationId": "deleteFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/constraints/validate": Object {
      "post": Object {
        "operationId": "validateConstraint",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/constraintSchema",
              },
            },
          },
          "description": "constraintSchema",
          "required": true,
        },
        "responses": Object {
          "204": Object {
            "description": "validConstraint",
          },
          "400": Object {
            "description": "invalidConstraint",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/feature-types": Object {
      "get": Object {
        "operationId": "getAllFeatureTypes",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureTypesSchema",
                },
              },
            },
            "description": "featureTypesSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features": Object {
      "get": Object {
        "deprecated": true,
        "operationId": "getAllToggles",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features/validate": Object {
      "post": Object {
        "operationId": "validateFeature",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features/{featureName}/tags": Object {
      "get": Object {
        "operationId": "listTags",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagsSchema",
                },
              },
            },
            "description": "tagsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "addTag",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/tagSchema",
              },
            },
          },
          "description": "tagSchema",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/tagSchema",
                },
              },
            },
            "description": "tagSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/features/{featureName}/tags/{type}/{value}": Object {
      "delete": Object {
        "operationId": "removeTag",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects": Object {
      "get": Object {
        "operationId": "getProjects",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/projectsSchema",
                },
              },
            },
            "description": "projectsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}": Object {
      "get": Object {
        "operationId": "getProjectHealthOverview",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/healthOverviewSchema",
                },
              },
            },
            "description": "healthOverviewSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/environments": Object {
      "post": Object {
        "operationId": "addEnvironmentToProject",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/projectEnvironmentSchema",
              },
            },
          },
          "description": "projectEnvironmentSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/environments/{environment}": Object {
      "delete": Object {
        "operationId": "removeEnvironmentFromProject",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features": Object {
      "get": Object {
        "operationId": "getFeatures",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featuresSchema",
                },
              },
            },
            "description": "featuresSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "createFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/createFeatureSchema",
              },
            },
          },
          "description": "createFeatureSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}": Object {
      "delete": Object {
        "operationId": "archiveFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "patch": Object {
        "operationId": "patchFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/patchesSchema",
              },
            },
          },
          "description": "patchesSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/updateFeatureSchema",
              },
            },
          },
          "description": "updateFeatureSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/clone": Object {
      "post": Object {
        "operationId": "cloneFeature",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/cloneFeatureSchema",
              },
            },
          },
          "description": "cloneFeatureSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}": Object {
      "get": Object {
        "operationId": "getEnvironment",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureEnvironmentSchema",
                },
              },
            },
            "description": "featureEnvironmentSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/off": Object {
      "post": Object {
        "operationId": "toggleEnvironmentOff",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/on": Object {
      "post": Object {
        "operationId": "toggleEnvironmentOn",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureSchema",
                },
              },
            },
            "description": "featureSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/strategies": Object {
      "get": Object {
        "operationId": "getStrategies",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/strategySchema",
                },
              },
            },
            "description": "strategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "post": Object {
        "operationId": "addStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/createStrategySchema",
              },
            },
          },
          "description": "createStrategySchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/environments/{environment}/strategies/{strategyId}": Object {
      "delete": Object {
        "operationId": "deleteStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/emptySchema",
                },
              },
            },
            "description": "emptySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "get": Object {
        "operationId": "getStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "patch": Object {
        "operationId": "patchStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/patchesSchema",
              },
            },
          },
          "description": "patchesSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "updateStrategy",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "environment",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "strategyId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/updateStrategySchema",
              },
            },
          },
          "description": "updateStrategySchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureStrategySchema",
                },
              },
            },
            "description": "featureStrategySchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/features/{featureName}/variants": Object {
      "get": Object {
        "operationId": "getFeatureVariants",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureVariantsSchema",
                },
              },
            },
            "description": "featureVariantsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "patch": Object {
        "operationId": "patchFeatureVariants",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/patchesSchema",
              },
            },
          },
          "description": "patchesSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureVariantsSchema",
                },
              },
            },
            "description": "featureVariantsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
      "put": Object {
        "operationId": "overwriteFeatureVariants",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
          Object {
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/variantsSchema",
              },
            },
          },
          "description": "variantsSchema",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/featureVariantsSchema",
                },
              },
            },
            "description": "featureVariantsSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/projects/{projectId}/health-report": Object {
      "get": Object {
        "operationId": "getProjectHealthReport",
        "parameters": Array [
          Object {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": Object {
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/healthReportSchema",
                },
              },
            },
            "description": "healthReportSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
    "/api/admin/ui-config": Object {
      "get": Object {
        "operationId": "getUIConfig",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/uiConfigSchema",
                },
              },
            },
            "description": "uiConfigSchema",
          },
        },
        "tags": Array [
          "admin",
        ],
      },
    },
  },
  "security": Array [
    Object {
      "apiKey": Array [],
    },
  ],
  "servers": Array [
    Object {
      "url": "http://localhost:4242",
    },
  ],
}
`;
